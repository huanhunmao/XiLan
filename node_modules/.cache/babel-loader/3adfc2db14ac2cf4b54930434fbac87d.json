{"ast":null,"code":"var _jsxFileName = \"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/subMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContext } from \"./menu\";\nimport Icon from \"../Icon/icon\";\nimport Transition from '../Transition/transition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubMenu = props => {\n  _s();\n\n  const {\n    index,\n    title,\n    className,\n    children\n  } = props;\n  const context = useContext(MenuContext); // 单独加这个 context.defaultOpenProps 是 string和 undefined 类型\n  // 所以需要下面的类型断言\n\n  const openedSubMenus = context.defaultOpenProps;\n  const isOpend = index && context.mode == 'vertical' ? openedSubMenus.includes(index) : false; //useState\n\n  const [menuOpen, setOpen] = useState(isOpend);\n  const classes = classNames('menu-item submenu-item', className, {\n    'is-active': context.index === index,\n    // 纵向需要添加这两个class  \n    'is-opened': menuOpen,\n    'is-vertical': context.mode === 'vertical'\n  }); // 点击\n\n  const handleClick = e => {\n    e.preventDefault();\n    setOpen(!menuOpen);\n  }; //handleMouse\n\n\n  let timer;\n\n  const handleMouse = (e, traggle) => {\n    clearTimeout(timer);\n    e.preventDefault();\n    setTimeout(() => {\n      setOpen(traggle);\n    }, 300);\n  }; //纵向 点击\n\n\n  const clickEvents = context.mode === 'vertical' ? {\n    onClick: handleClick\n  } : {}; // 横向\n\n  const hoverEvents = context.mode != 'vertical' ? {\n    onMouseEnter: e => {\n      handleMouse(e, true);\n    },\n    onMouseLeave: e => {\n      handleMouse(e, false);\n    }\n  } : {}; // 展开函数\n\n  const renderChildren = () => {\n    const subMenuClasses = classNames('viking-submenu', className, {\n      'menu-opened': menuOpen\n    });\n    const childrenComponent = React.Children.map(children, (child, i) => {\n      const childElement = child;\n\n      if (childElement.type.displayName == 'MenuItem') {\n        // return childElement\n        return /*#__PURE__*/React.cloneElement(childElement, {\n          index: `${index}-${i}`\n        });\n      } else {\n        console.error('Warnning: is not a MenuItem');\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Transition, {\n      in: menuOpen,\n      timeout: 300,\n      animation: \"zoom-in-top\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: subMenuClasses,\n        children: childrenComponent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n\n  return (\n    /*#__PURE__*/\n    // 传入  {...hoverEvents}  {...clickEvents}\n    _jsxDEV(\"li\", {\n      className: classes,\n      ...hoverEvents,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submenu-title\",\n        ...clickEvents,\n        children: [title, /*#__PURE__*/_jsxDEV(Icon, {\n          icon: \"arrow-down\",\n          className: \"arrow-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), renderChildren()]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(SubMenu, \"R+2zzX7W5dJ18Ywuf2HCt0r60/I=\");\n\n_c = SubMenu;\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubMenu\");","map":{"version":3,"sources":["/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/subMenu.tsx"],"names":["React","useContext","useState","classNames","MenuContext","Icon","Transition","SubMenu","props","index","title","className","children","context","openedSubMenus","defaultOpenProps","isOpend","mode","includes","menuOpen","setOpen","classes","handleClick","e","preventDefault","timer","handleMouse","traggle","clearTimeout","setTimeout","clickEvents","onClick","hoverEvents","onMouseEnter","onMouseLeave","renderChildren","subMenuClasses","childrenComponent","Children","map","child","i","childElement","type","displayName","cloneElement","console","error"],"mappings":"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","sourcesContent":["import React,{FunctionComponentElement, useContext, useState} from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContext } from \"./menu\";\nimport { MenuItemProps } from \"./menuItem\";\nimport Icon from \"../Icon/icon\";\nimport {CSSTransition} from 'react-transition-group'\nimport  Transition  from '../Transition/transition';\nexport interface SubMenuProps{\n    index ?: string,\n    title : string,\n    className ?: string\n}\n\nconst SubMenu : React.FC<SubMenuProps> = (props) => {\n    const {index,title,className,children} = props;\n    const context = useContext(MenuContext);\n    // 单独加这个 context.defaultOpenProps 是 string和 undefined 类型\n    // 所以需要下面的类型断言\n    const openedSubMenus = context.defaultOpenProps as Array<string>;\n    const isOpend = (index && context.mode == 'vertical') ? openedSubMenus.includes(index) : false;\n        //useState\n   const [menuOpen, setOpen] = useState(isOpend)\n    const classes = classNames('menu-item submenu-item', className,{\n        'is-active' : context.index === index,\n        // 纵向需要添加这两个class  \n        'is-opened' : menuOpen,\n        'is-vertical' : context.mode === 'vertical' \n    })\n    // 点击\n    const handleClick = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setOpen(!menuOpen)\n    }\n    //handleMouse\n    let timer : any;\n    const handleMouse = (e: React.MouseEvent, traggle : boolean) => {\n        clearTimeout(timer);\n        e.preventDefault();\n        setTimeout(() => {\n            setOpen(traggle)\n        },300)\n\n    }\n    //纵向 点击\n    const clickEvents = context.mode === 'vertical' ? {\n        onClick : handleClick\n    } : {}\n    // 横向\n    const hoverEvents = context.mode != 'vertical' ? {\n        onMouseEnter : (e: React.MouseEvent) => {handleMouse(e,true)},\n        onMouseLeave : (e: React.MouseEvent) => {handleMouse(e,false)}\n    } :  {}\n    // 展开函数\n    const renderChildren = () => {\n        const subMenuClasses = classNames('viking-submenu' , className, {\n            'menu-opened' : menuOpen\n        })\n        const childrenComponent = React.Children.map(children, (child, i) => {\n            const childElement = child as FunctionComponentElement<MenuItemProps>;\n            if(childElement.type.displayName == 'MenuItem'){\n                // return childElement\n                return React.cloneElement(childElement,{\n                    index: `${index}-${i}`\n                })\n            }else{\n                console.error('Warnning: is not a MenuItem');\n            }\n        })\n        return (\n            <Transition in={menuOpen} timeout={300} animation ='zoom-in-top' >\n            <ul  className={subMenuClasses}>\n                {childrenComponent}\n            </ul>\n            </Transition>\n         \n        )\n    }\n    return ( \n        // 传入  {...hoverEvents}  {...clickEvents}\n        <li key={index} className={classes} {...hoverEvents}>\n            {/* 两部分组成 */}\n            {/* 第一部分title  */}\n            <div className=\"submenu-title\" {...clickEvents}>\n                {title}\n                <Icon icon='arrow-down' className='arrow-icon'/>\n            </div>\n            {/* 第二部分是展开的内容 */}\n            {renderChildren()}\n        </li>\n    )\n}\n\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}