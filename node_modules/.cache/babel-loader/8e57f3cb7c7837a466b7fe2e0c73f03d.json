{"ast":null,"code":"var _jsxFileName = \"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Transition/transition.tsx\";\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transition = props => {\n  const {\n    children,\n    classNames,\n    animation,\n    wrapper,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: classNames ? classNames : animation,\n    ...restProps,\n    children: wrapper ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Transition;\nTransition.defaultProps = {\n  unmountOnExit: true,\n  appear: true\n};\nexport default Transition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transition\");","map":{"version":3,"sources":["/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Transition/transition.tsx"],"names":["React","CSSTransition","Transition","props","children","classNames","animation","wrapper","restProps","defaultProps","unmountOnExit","appear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;;AAUA,MAAMC,UAAqC,GAAIC,KAAD,IAAW;AACvD,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,OAJI;AAKJ,OAAGC;AALC,MAMFL,KANJ;AAOA,sBACE,QAAC,aAAD;AACE,IAAA,UAAU,EAAKE,UAAU,GAAGA,UAAH,GAAgBC,SAD3C;AAAA,OAEME,SAFN;AAAA,cAIGD,OAAO,gBAAG;AAAA,gBAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,YAAH,GAA2BA;AAJrC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhBD;;KAAMF,U;AAiBNA,UAAU,CAACO,YAAX,GAA0B;AACxBC,EAAAA,aAAa,EAAE,IADS;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B;AAKA,eAAeT,UAAf","sourcesContent":["import React from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { CSSTransitionProps } from 'react-transition-group/CSSTransition'\n\ntype AnimationName = 'zoom-in-top' | 'zoom-in-left' | 'zoom-in-bottom' | 'zoom-in-right'\n\ntype TransitionProps = CSSTransitionProps & {\n  animation?: AnimationName,\n  wrapper? : boolean,\n}\n\nconst Transition: React.FC<TransitionProps> = (props) => {\n  const {\n    children,\n    classNames,\n    animation,\n    wrapper,\n    ...restProps\n  } = props\n  return (\n    <CSSTransition\n      classNames = { classNames ? classNames : animation}\n      {...restProps}\n    >\n      {wrapper ? <div>{children}</div> : children}\n    </CSSTransition>\n  )\n}\nTransition.defaultProps = {\n  unmountOnExit: true,\n  appear: true,\n}\n\nexport default Transition"]},"metadata":{},"sourceType":"module"}