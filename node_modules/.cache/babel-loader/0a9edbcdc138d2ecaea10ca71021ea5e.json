{"ast":null,"code":"var _jsxFileName = \"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/subMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContext } from \"./menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubMenu = props => {\n  _s();\n\n  const {\n    index,\n    title,\n    className,\n    children\n  } = props;\n  const context = useContext(MenuContext);\n  const classes = classNames('menu-item submenu-item', className, {\n    'is-active': context.index === index\n  }); // 展开函数\n\n  const renderChildren = () => {\n    const childrenComponent = React.Children.map(children, (child, index) => {\n      const childElement = child;\n\n      if (childElement.type.displayName == 'MenuItem') {\n        return childElement;\n      } else {\n        console.error('Warnning: is not a MenuItem');\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"xilan-submenu\",\n      children: childrenComponent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submenu-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), renderChildren()]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SubMenu, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = SubMenu;\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubMenu\");","map":{"version":3,"sources":["/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/subMenu.tsx"],"names":["React","useContext","classNames","MenuContext","SubMenu","props","index","title","className","children","context","classes","renderChildren","childrenComponent","Children","map","child","childElement","type","displayName","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwCC,UAAxC,QAAyD,OAAzD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,QAA5B;;;AASA,MAAMC,OAAgC,GAAIC,KAAD,IAAW;AAAA;;AAChD,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,KAAP;AAAaC,IAAAA,SAAb;AAAuBC,IAAAA;AAAvB,MAAmCJ,KAAzC;AACA,QAAMK,OAAO,GAAGT,UAAU,CAACE,WAAD,CAA1B;AACA,QAAMQ,OAAO,GAAGT,UAAU,CAAC,wBAAD,EAA2BM,SAA3B,EAAqC;AAC3D,iBAAcE,OAAO,CAACJ,KAAR,KAAkBA;AAD2B,GAArC,CAA1B,CAHgD,CAOhD;;AACA,QAAMM,cAAc,GAAG,MAAM;AACzB,UAAMC,iBAAiB,GAAGb,KAAK,CAACc,QAAN,CAAeC,GAAf,CAAmBN,QAAnB,EAA6B,CAACO,KAAD,EAAQV,KAAR,KAAkB;AACrE,YAAMW,YAAY,GAAGD,KAArB;;AACA,UAAGC,YAAY,CAACC,IAAb,CAAkBC,WAAlB,IAAiC,UAApC,EAA+C;AAC3C,eAAOF,YAAP;AACH,OAFD,MAEK;AACDG,QAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd;AACH;AACJ,KAPyB,CAA1B;AAQA,wBACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,gBACKR;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAdD;;AAeA,sBACI;AAAgB,IAAA,SAAS,EAAEF,OAA3B;AAAA,4BAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOKK,cAAc,EAPnB;AAAA,KAASN,KAAT;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlCD;;GAAMF,O;;KAAAA,O;AAoCNA,OAAO,CAACe,WAAR,GAAsB,SAAtB;AACA,eAAef,OAAf","sourcesContent":["import React,{FunctionComponentElement, useContext} from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContext } from \"./menu\";\nimport { MenuItemProps } from \"./menuItem\";\n\nexport interface SubMenuProps{\n    index ?: number,\n    title : string,\n    className ?: string\n}\n\nconst SubMenu : React.FC<SubMenuProps> = (props) => {\n    const {index,title,className,children} = props;\n    const context = useContext(MenuContext);\n    const classes = classNames('menu-item submenu-item', className,{\n        'is-active' : context.index === index\n    })\n\n    // 展开函数\n    const renderChildren = () => {\n        const childrenComponent = React.Children.map(children, (child, index) => {\n            const childElement = child as FunctionComponentElement<MenuItemProps>;\n            if(childElement.type.displayName == 'MenuItem'){\n                return childElement\n            }else{\n                console.error('Warnning: is not a MenuItem');\n            }\n        })\n        return (\n            <ul className='xilan-submenu'>\n                {childrenComponent}\n            </ul>\n        )\n    }\n    return (\n        <li key={index} className={classes}>\n            {/* 两部分组成 */}\n            {/* 第一部分title  */}\n            <div className=\"submenu-title\">\n                {title}\n            </div>\n            {/* 第二部分是展开的内容 */}\n            {renderChildren()}\n        </li>\n    )\n}\n\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}