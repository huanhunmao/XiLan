{"ast":null,"code":"var _jsxFileName = \"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Button/button.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ButtonSize;\n\n(function (ButtonSize) {\n  ButtonSize[\"Large\"] = \"lg\";\n  ButtonSize[\"Small\"] = \"sm\";\n})(ButtonSize || (ButtonSize = {}));\n\nexport let ButtonType;\n\n(function (ButtonType) {\n  ButtonType[\"Primary\"] = \"primary\";\n  ButtonType[\"Default\"] = \"default\";\n  ButtonType[\"Danger\"] = \"danger\";\n  ButtonType[\"Link\"] = \"link\";\n})(ButtonType || (ButtonType = {}));\n\n// 主函数 \nconst Button = props => {\n  const {\n    btnSize,\n    href,\n    disabled,\n    btnType,\n    children\n  } = props;\n  const classes = classNames('btn', {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${btnSize}`]: btnSize,\n    disabled: btnType === ButtonType.Link && href\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classes,\n      href: href,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes,\n      disabled: disabled,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Button/button.tsx"],"names":["React","classNames","ButtonSize","ButtonType","Button","props","btnSize","href","disabled","btnType","children","classes","Link"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAgBZ;AACA,MAAMC,MAAkC,GAAIC,KAAD,IAAW;AAClD,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,IAAT;AAAcC,IAAAA,QAAd;AAAuBC,IAAAA,OAAvB;AAA+BC,IAAAA;AAA/B,MAA2CL,KAAjD;AACA,QAAMM,OAAO,GAAGV,UAAU,CAAC,KAAD,EAAO;AAC7B,KAAE,OAAMQ,OAAQ,EAAhB,GAAqBA,OADQ;AAE7B,KAAE,OAAMH,OAAQ,EAAhB,GAAqBA,OAFQ;AAG7BE,IAAAA,QAAQ,EAAIC,OAAO,KAAKN,UAAU,CAACS,IAAxB,IAAiCL;AAHf,GAAP,CAA1B;;AAKA,MAAGE,OAAO,KAAKN,UAAU,CAACS,IAAvB,IAA+BL,IAAlC,EAAuC;AACnC,wBACI;AAAG,MAAA,SAAS,EAAEI,OAAd;AAAuB,MAAA,IAAI,EAAEJ,IAA7B;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMK;AACD,wBACI;AAAQ,MAAA,SAAS,EAAEC,OAAnB;AAA4B,MAAA,QAAQ,EAAEH,QAAtC;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;AACJ,CApBD;;KAAMN,M","sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\n\nexport enum ButtonSize  {\n    Large = 'lg',\n    Small = 'sm'\n}\n\nexport enum ButtonType {\n    Primary = 'primary',\n    Default = 'default',\n    Danger = 'danger',\n    Link = 'link'\n}\n\ninterface BaseButtonProps {\n    className ?: string,\n    btnType ?: ButtonType,\n    btnSize ?: ButtonSize,\n    children : React.ReactNode,\n    href : string,\n    disabled : boolean \n}\n\n// 主函数 \nconst Button : React.FC<BaseButtonProps> = (props) => {\n    const {btnSize,href,disabled,btnType,children} = props\n    const classes = classNames('btn',{\n        [`btn-${btnType}`] : btnType,\n        [`btn-${btnSize}`] : btnSize,\n        disabled : (btnType === ButtonType.Link) && href\n    })\n    if(btnType === ButtonType.Link && href){\n        return (\n            <a className={classes} href={href}>\n                {children}\n            </a>\n        )\n    }else{\n        return (\n            <button className={classes} disabled={disabled}>\n                {children}\n            </button>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}