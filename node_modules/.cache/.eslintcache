[{"/Users/fhj/Desktop/github-pr/ms-/xilan/src/index.tsx":"1","/Users/fhj/Desktop/github-pr/ms-/xilan/src/reportWebVitals.js":"2","/Users/fhj/Desktop/github-pr/ms-/xilan/src/App.tsx":"3","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Button/button.tsx":"4","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/menu.tsx":"5","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/menuItem.tsx":"6","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/subMenu.tsx":"7","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Icon/icon.tsx":"8","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Transition/transition.tsx":"9","/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Page.stories.tsx":"10","/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Header.stories.tsx":"11","/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Button.stories.tsx":"12","/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Header.tsx":"13","/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Button.tsx":"14","/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Page.tsx":"15"},{"size":508,"mtime":1625701187879,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1625665180259,"results":"18","hashOfConfig":"17"},{"size":1546,"mtime":1626133061174,"results":"19","hashOfConfig":"17"},{"size":1824,"mtime":1626132618036,"results":"20","hashOfConfig":"17"},{"size":2620,"mtime":1626043548444,"results":"21","hashOfConfig":"17"},{"size":1105,"mtime":1625996631780,"results":"22","hashOfConfig":"17"},{"size":3334,"mtime":1626130685512,"results":"23","hashOfConfig":"17"},{"size":745,"mtime":1626054764477,"results":"24","hashOfConfig":"17"},{"size":790,"mtime":1626130390998,"results":"25","hashOfConfig":"17"},{"size":549,"mtime":1626134188634,"results":"26","hashOfConfig":"27"},{"size":454,"mtime":1626134188634,"results":"28","hashOfConfig":"27"},{"size":749,"mtime":1626134723560,"results":"29","hashOfConfig":"27"},{"size":1339,"mtime":1626134188634,"results":"30","hashOfConfig":"27"},{"size":924,"mtime":1626134188633,"results":"31","hashOfConfig":"27"},{"size":2407,"mtime":1626134188634,"results":"32","hashOfConfig":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1779wpf",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zti3zc",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fhj/Desktop/github-pr/ms-/xilan/src/index.tsx",[],["68","69"],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/reportWebVitals.js",[],["70","71"],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/App.tsx",["72","73","74"],"import React,{useState} from 'react'\nimport Button,{ButtonSize,ButtonType} from './components/Button/button';\nimport MenuItem from './components/Menu/menuItem';\nimport Menu from './components/Menu/menu';\nimport SubMenu from './components/Menu/subMenu'\nimport Icon from './components/Icon/icon';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas} from '@fortawesome/free-solid-svg-icons';\nimport Transition from './components/Transition/transition'\nlibrary.add(fas)\n\nfunction App() {\n  const [show,setShow] = useState(false)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      {/* <Icon icon='arrow-down'  theme='danger' size='10x'/> */}\n        <Menu  onSelect={(index) => {alert(index)}} mode='horizontal' defaultOpenProps={['2']}>\n          <MenuItem >\n          cool link1\n          </MenuItem>\n          <MenuItem disabled  >\n          cool link2\n          </MenuItem>\n          {/* 测试SubMenu */}\n          <SubMenu title=\"dropdown\">\n          <MenuItem>\n          dropdown 1\n          </MenuItem>\n          <MenuItem>\n          dropdown 2\n          </MenuItem>\n          </SubMenu>\n          <MenuItem  >\n          cool link3\n          </MenuItem>\n        </Menu>\n      </header>\n      <div>\n      <Button onClick={() => {setShow(!show)}}>Toggle</Button>\n     <Transition in={show} timeout={300} animation=\"zoom-in-bottom\">\n       <div>\n       <p>test</p>\n        <p>test</p>\n        <p>test</p>\n       </div>\n     </Transition>\n      </div>\n   \n    </div>\n  );\n}\n\nexport default App;\n","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Button/button.tsx",["75"],"import React from 'react'\nimport classNames from 'classnames'\n\nexport enum ButtonSize {\n    Large = 'lg',\n    Small = 'sm'\n}\n\nexport enum ButtonType {\n    Default = 'default',\n    Primary = 'primary',\n    Danger = 'danger',\n    Link = 'link'\n}\n\n// export type ButtonSize = 'lg' | 'sm'\n// export type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n\ninterface BaseButtonProps {\n    className ?: string,\n    btnSize ?:  ButtonSize,\n    btnType ?: ButtonType,\n    children : React.ReactNode,\n    disabled ?: boolean,\n    href ?: string,\n   \n}\n// 拿到button 所有属性\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLLIElement>\n//拿到上面的BaseButtonProps 所有属性 \ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLLIElement>\n// 两个合在一起并导出 \nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\nconst Button : React.FC<ButtonProps> = (props) => {\n    const {btnSize,\n         btnType,\n         children,\n         href,\n         disabled,\n         className,\n         ...restProps\n        } = props\n    const classes = classNames('btn',className,{\n        [`btn-${btnType}`] : btnType,\n        [`btn-${btnSize}`] : btnSize,\n        disabled : (btnType === ButtonType.Link) && disabled\n    })\n    if(btnType === ButtonType.Link && href){\n        return(\n            <a className={classes}  \n            href={href}\n        //    {...restProps}\n            >\n                {children}\n            </a>\n        )\n    }else{\n        return (\n            <button className={classes} \n            disabled={disabled}  \n           // {...restProps}\n            >\n                {children}\n            </button>\n        )\n    }\n}\n\nButton.defaultProps={\n    disabled:false,\n    btnType:ButtonType.Default\n}\n\nexport default Button","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/menu.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/menuItem.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Menu/subMenu.tsx",["76","77","78"],"import React,{FunctionComponentElement, useContext, useState} from \"react\";\nimport classNames from \"classnames\";\nimport { MenuContext } from \"./menu\";\nimport { MenuItemProps } from \"./menuItem\";\nimport Icon from \"../Icon/icon\";\nimport  Transition  from '../Transition/transition';\nexport interface SubMenuProps{\n    index ?: string,\n    title : string,\n    className ?: string\n}\n\nconst SubMenu : React.FC<SubMenuProps> = (props) => {\n    const {index,title,className,children} = props;\n    const context = useContext(MenuContext);\n    // 单独加这个 context.defaultOpenProps 是 string和 undefined 类型\n    // 所以需要下面的类型断言\n    const openedSubMenus = context.defaultOpenProps as Array<string>;\n    const isOpend = (index && context.mode == 'vertical') ? openedSubMenus.includes(index) : false;\n        //useState\n   const [menuOpen, setOpen] = useState(isOpend)\n    const classes = classNames('menu-item submenu-item', className,{\n        'is-active' : context.index === index,\n        // 纵向需要添加这两个class  \n        'is-opened' : menuOpen,\n        'is-vertical' : context.mode === 'vertical' \n    })\n    // 点击\n    const handleClick = (e: React.MouseEvent) => {\n        e.preventDefault();\n        setOpen(!menuOpen)\n    }\n    //handleMouse\n    let timer : any;\n    const handleMouse = (e: React.MouseEvent, traggle : boolean) => {\n        clearTimeout(timer);\n        e.preventDefault();\n        setTimeout(() => {\n            setOpen(traggle)\n        },300)\n\n    }\n    //纵向 点击\n    const clickEvents = context.mode === 'vertical' ? {\n        onClick : handleClick\n    } : {}\n    // 横向\n    const hoverEvents = context.mode != 'vertical' ? {\n        onMouseEnter : (e: React.MouseEvent) => {handleMouse(e,true)},\n        onMouseLeave : (e: React.MouseEvent) => {handleMouse(e,false)}\n    } :  {}\n    // 展开函数\n    const renderChildren = () => {\n        const subMenuClasses = classNames('viking-submenu' , className, {\n            'menu-opened' : menuOpen\n        })\n        const childrenComponent = React.Children.map(children, (child, i) => {\n            const childElement = child as FunctionComponentElement<MenuItemProps>;\n            if(childElement.type.displayName == 'MenuItem'){\n                // return childElement\n                return React.cloneElement(childElement,{\n                    index: `${index}-${i}`\n                })\n            }else{\n                console.error('Warnning: is not a MenuItem');\n            }\n        })\n        return (\n            <Transition in={menuOpen} timeout={300} animation ='zoom-in-bottom' >\n            <ul  className={subMenuClasses}>\n                {childrenComponent}\n            </ul>\n            {/* <p>test</p> */}\n            </Transition>\n         \n        )\n    }\n    return ( \n        // 传入  {...hoverEvents}  {...clickEvents}\n        <li key={index} className={classes} {...hoverEvents}>\n            {/* 两部分组成 */}\n            {/* 第一部分title  */}\n            <div className=\"submenu-title\" {...clickEvents}>\n                {title}\n                <Icon icon='arrow-down' className='arrow-icon'/>\n            </div>\n            {/* 第二部分是展开的内容 */}\n            {renderChildren()}\n        </li>\n    )\n}\n\nSubMenu.displayName = 'SubMenu';\nexport default SubMenu;","/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Icon/icon.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/components/Transition/transition.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Page.stories.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Header.stories.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Button.stories.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Header.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Button.tsx",[],"/Users/fhj/Desktop/github-pr/ms-/xilan/src/stories/Page.tsx",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":16,"nodeType":"85","messageId":"86","endLine":2,"endColumn":26},{"ruleId":"83","severity":1,"message":"87","line":2,"column":27,"nodeType":"85","messageId":"86","endLine":2,"endColumn":37},{"ruleId":"83","severity":1,"message":"88","line":6,"column":8,"nodeType":"85","messageId":"86","endLine":6,"endColumn":12},{"ruleId":"83","severity":1,"message":"89","line":41,"column":13,"nodeType":"85","messageId":"86","endLine":41,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":19,"column":44,"nodeType":"92","messageId":"93","endLine":19,"endColumn":46},{"ruleId":"90","severity":1,"message":"94","line":48,"column":38,"nodeType":"92","messageId":"93","endLine":48,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":59,"column":46,"nodeType":"92","messageId":"93","endLine":59,"endColumn":48},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'ButtonSize' is defined but never used.","Identifier","unusedVar","'ButtonType' is defined but never used.","'Icon' is defined but never used.","'restProps' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]